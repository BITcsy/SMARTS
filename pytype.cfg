# NOTE: All relative paths are relative to the location of this file.

[pytype]

# Space-separated list of files or directories to exclude.
exclude =
    **/*_test.py
    **/test_*.py
    ./baselines
    ./ultra
    ./examples
    ./tests

# Space-separated list of files or directories to process.
inputs =
    .

# Keep going past errors to analyze as many files as possible.
keep_going = True

# Run N jobs in parallel. When 'auto' is used, this will be equivalent to the
# number of CPUs on the host system.
jobs = 4

# All pytype output goes here.
output = .pytype

# Paths to source code directories, separated by ':'.
pythonpath =
    .

# Python version (major.minor) of the target code.
python_version = 3.7

# Use the enum overlay for more precise enum checking. This flag is temporary
# and will be removed once this behavior is enabled by default.
use_enum_overlay = Use the enum overlay for more precise enum checking.

# Allow recursive type definitions. This flag is temporary and will be removed
# once this behavior is enabled by default.
allow_recursive_types = Allow recursive type definitions.

# Build dict literals from dict(k=v, ...) calls. This flag is temporary and will
# be removed once this behavior is enabled by default.
build_dict_literals_from_kwargs = Build dict literals from dict(k=v, ...) calls.

# Enable stricter namedtuple checks, such as unpacking and 'typing.Tuple'
# compatibility. This flag is temporary and will be removed once this behavior
# is enabled by default.
strict_namedtuple_checks = Enable stricter namedtuple checks, such as unpacking and 'typing.Tuple' compatibility.

# Fix collisions between module and local names in pyi files. This flag is
# temporary and will be removed once this behavior is enabled by default.
fix_module_collisions = Fix collisions between module and local names in pyi files.

# Solve unknown types to label with structural types. This flag is temporary and
# will be removed once this behavior is enabled by default.
protocols = Solve unknown types to label with structural types.

# Only load submodules that are explicitly imported. This flag is temporary and
# will be removed once this behavior is enabled by default.
strict_import = Only load submodules that are explicitly imported.

# Infer precise return types even for invalid function calls. This flag is
# temporary and will be removed once this behavior is enabled by default.
precise_return = Infer precise return types even for invalid function calls.

# Comma or space separated list of error names to ignore.
disable =
    pyi-error

# Don't report errors.
report_errors = True
